#include "myheader.h"
/*
정수 X에 사용할 수 있는 연산은 다음과 같이 세 가지 이다.

X가 3으로 나누어 떨어지면, 3으로 나눈다.
X가 2로 나누어 떨어지면, 2로 나눈다.
1을 뺀다.
정수 N이 주어졌을 때, 위와 같은 연산 세 개를 적절히 사용해서
1을 만들려고 한다. 연산을 사용하는 횟수의 최소값을 출력하시오

첫째 줄에 1보다 크거나 같고, 10^6보다 작거나 같은 자연수 N이 주어진다.
*/
int dp[3000001];
int Algorithm::MakeOne() {
	int X;
	fill_n(dp, 3000001, 1000000);//배열 초기화
	dp[1] = 0; //각 dp에 최소값을 넣는다.
	scanf_s("%d", &X);
	for (int i = 1; i <= X; i++) {
		if (dp[i + 1] > dp[i] + 1) dp[i + 1] = dp[i] + 1;//1
		if (dp[i * 2] > dp[i] + 1) dp[i * 2] = dp[i] + 1;//1
		if (dp[i * 3] > dp[i] + 1) dp[i * 3] = dp[i] + 1;//1
	}

	printf("%d", dp[X]);
	return 0;
}

